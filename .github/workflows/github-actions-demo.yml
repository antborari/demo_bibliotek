name: GitHub Actions Demo
on:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Cache SonarQube packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Gradle packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: ./gradlew build sonarqube --info

      - name: Get app version
        run: |
          $TimestampEpoch = Get-Date -Date '2021-01-01'
          $DaysSinceEpoch = (New-TimeSpan -Start $TimestampEpoch -End $(Get-Date)).Days
          $MinutesSinceMidnight= [int] (New-TimeSpan -Start $(Get-Date -Hour 0 -Minute 00 -Second 00) -End $(Get-Date)).TotalMinutes
          $MinutesSinceMidnightFourDigits = ([string]$minutesSinceMidnight).PadLeft(4,'0')
          $AppVersionNumericSeparatedByDots = "0.$DaysSinceEpoch.$MinutesSinceMidnight"
          $AppVersionStringOverlappedAndPadded = "0$DaysSinceEpoch$MinutesSinceMidnightFourDigits"
          # Set output variables
          Write-Host "App version -> $AppVersionNumericSeparatedByDots, setting output variable 'appversion'"
          Write-Host "##vso[task.setvariable variable=appversion;isOutput=true]$AppVersionNumericSeparatedByDots"
          Write-Host "String app version -> $AppVersionStringOverlappedAndPadded, setting output variable 'stringappversion'"
          Write-Host "##vso[task.setvariable variable=stringappversion;isOutput=true]$AppVersionStringOverlappedAndPadded"
          # Update build name
          Write-Host "##vso[build.updatebuildnumber]$AppVersionNumericSeparatedByDots"
        shell: pwsh

      - name: Build Release APK
        run: ./gradlew assembleRelease

#      - name: Move apk to artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: "unsigned.apk"
#          path: "artifacts/unsigned.apk"

      - name: Sign APK
        id: sign_apk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNINGKEYBASE64 }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTOREPASSWORD }}
          keyPassword: ${{ secrets.KEYPASSWORD }}

      - name: Make artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release-signed
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}

      - name: Build AAB
        run: ./gradlew bundleRelease

      - name: Sign AAB
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNINGKEYBASE64 }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTOREPASSWORD }}
          keyPassword: ${{ secrets.KEYPASSWORD }}

      - name: Make artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release-signed
          path: ${{steps.sign_aab.outputs.signedReleaseFile}}

      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: artifacts/app-release.aab